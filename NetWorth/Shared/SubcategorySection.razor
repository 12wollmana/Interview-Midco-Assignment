@using Interfaces;

@if (subcategory != null)
{
    <div class="card-body">
        <h6 class="card-title">@subcategory.title</h6>
        <ul class="list-group list-group-flush">
            @foreach (IValue<Double> value in @subcategory.values)
            {
                <li class="list-group-item">
                    <ValueInput dataValue=@value
                                onUpdate=@onValueUpdated
                                formatter=@formatter
                                validator=@validator />
                </li>
            }
        </ul>
    </div>
}
else
{
    <div class="alert alert-danger" role="alert">
        A subcategory has not been defined!
    </div>
}

@code {
    /// <summary>
    /// The subcategory to generate the section for.
    /// </summary>
    [Parameter, EditorRequired]
    public ISubcategory<Double>? subcategory { get; set; }

    /// <summary>
    /// The validator for inputs within the section.
    /// </summary>
    [Parameter]
    public IValidator<Double>? validator { get; set; }

    /// <summary>
    /// The formatter for inputs within the section.
    /// </summary>
    [Parameter]
    public IFormatter<Double, Decimal>? formatter { get; set; }

    /// <summary>
    /// Method to call when inputs are valid and updated.
    /// </summary>
    [Parameter]
    public Action? onUpdate { get; set; }

    private void onValueUpdated()
    {
        if (onUpdate != null)
        {
            onUpdate.Invoke();
        }
    }
}

